#include "KariLevel1.h"

USING_NS_CC;

Scene* KariNivel1::createScene()
{
    // 'scene' is an autorelease object
    auto scene = Scene::create();
    
    // 'layer' is an autorelease object
    auto layer = KariNivel1::create();

    // add layer as a child to scene
    scene->addChild(layer);

    // return the scene
    return scene;
}

// on "init" you need to initialize your instance
bool KariNivel1::init()
{
    //////////////////////////////
    // 1. super init first
    if ( !Layer::init() )
    {
        return false;
    }
    
    Size visibleSize = Director::getInstance()->getVisibleSize();
    Vec2 origin = Director::getInstance()->getVisibleOrigin();

    /////////////////////////////
    // 2. add a menu item with "X" image, which is clicked to quit the program
    //    you may modify it.

    // add a "close" icon to exit the progress. it's an autorelease object
    auto closeItem = MenuItemImage::create(
                                           "CloseNormal.png",
                                           "CloseSelected.png",
                                           CC_CALLBACK_1(KariNivel1::menuCloseCallback, this));
    
    closeItem->setPosition(Vec2(origin.x + visibleSize.width - closeItem->getContentSize().width/2 ,
                                origin.y + closeItem->getContentSize().height/2));

    // create menu, it's an autorelease object
    //centerSprites(3);
    
    auto s = Director::getInstance()->getWinSize();

    auto actionTo = MoveTo::create(2, Vec2(s.width-40, s.height-40));
    auto actionBy = MoveBy::create(2, Vec2(0,410));
    auto actionByBack = actionBy->reverse();

    //closeItem->runAction( actcenterSprites(3);
    //closeItem->runAction( Sequence::create(actionBy, actionByBack, nullptr));
    //_kathia->runAction(MoveTo::create(1, Vec2(40,40)));

    //auto action = Sequence::create(
    DelayTime::create(1);
    CallFunc::create( std::bind( &KariNivel1::repeatForever, this, closeItem) );
     

    //closeItem->runAction(action);

    auto menu = Menu::create(closeItem, NULL);
    menu->setPosition(Vec2::ZERO);
    this->addChild(menu, 1);

    /////////////////////////////
    // 3. add your codes below...

    // add a label shows "Hello World"
    // create and initialize a label
    
    auto label = LabelTTF::create("Hello World", "Arial", 24);
    
    // position the label on the center of the screen
    label->setPosition(Vec2(origin.x + visibleSize.width/2,
                            origin.y + visibleSize.height - label->getContentSize().height));

    // add the label as a child to this layer
    this->addChild(label, 1);

    // add "HelloWorld" splash screen"
    auto sprite = Sprite::create("sprites/fondo.png");

    // position the sprite on the center of the screen
    sprite->setPosition(Vec2(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));

    // add the sprite as a child to this layer
    this->addChild(sprite, 0);
    
    return true;
    
}

void KariNivel1::repeatForever(Node* sender)
{
  Size visibleSize = Director::getInstance()->getVisibleSize();
  Vec2 origin = Director::getInstance()->getVisibleOrigin();
  auto actionBy = MoveBy::create(2, Vec2(0,410));
  auto actionByBack = actionBy->reverse();
  
  //auto repeat = RepeatForever::create( RotateBy::create(1.0f, 360) );
  //closeItem->runAction( Sequence::create(actionBy, actionByBack, nullptr));
  auto repeat = RepeatForever::create(MoveTo::create(1, Vec2(40,40)));
  sender->runAction(repeat);
  sender->setPosition(Vec2(origin.x + visibleSize.width - sender->getContentSize().width/2 ,
                                origin.y + sender->getContentSize().height/2));
}

void KariNivel1::menuCloseCallback(Ref* pSender)
{
#if (CC_TARGET_PLATFORM == CC_PLATFORM_WP8) || (CC_TARGET_PLATFORM == CC_PLATFORM_WINRT)
	MessageBox("You pressed the close button. Windows Store Apps do not implement a close button.","Alert");
    return;
#endif

    Director::getInstance()->end();

#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
    exit(0);
#endif
}
